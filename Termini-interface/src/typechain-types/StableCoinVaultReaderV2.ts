/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface StableCoinVaultReaderV2Interface extends Interface {
  getFunction(
    nameOrSignature:
      | "cumulativeFundingRates"
      | "getIndexTokenAccountInfo"
      | "getIndexTokenInfo"
      | "getVaultTokenInfo"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "cumulativeFundingRates",
    values: [AddressLike, AddressLike, AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getIndexTokenAccountInfo",
    values: [AddressLike, AddressLike, AddressLike, AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getIndexTokenInfo",
    values: [AddressLike, AddressLike, AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getVaultTokenInfo",
    values: [AddressLike, AddressLike, BigNumberish, AddressLike[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "cumulativeFundingRates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIndexTokenAccountInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIndexTokenInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getVaultTokenInfo",
    data: BytesLike
  ): Result;
}

export interface StableCoinVaultReaderV2 extends BaseContract {
  connect(runner?: ContractRunner | null): StableCoinVaultReaderV2;
  waitForDeployment(): Promise<this>;

  interface: StableCoinVaultReaderV2Interface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  cumulativeFundingRates: TypedContractMethod<
    [_dataBase: AddressLike, _poolToken: AddressLike, _tokens: AddressLike[]],
    [bigint[]],
    "view"
  >;

  getIndexTokenAccountInfo: TypedContractMethod<
    [
      _dataBase: AddressLike,
      _poolToken: AddressLike,
      _account: AddressLike,
      _tokens: AddressLike[]
    ],
    [bigint[]],
    "view"
  >;

  getIndexTokenInfo: TypedContractMethod<
    [_dataBase: AddressLike, _poolToken: AddressLike, _tokens: AddressLike[]],
    [bigint[]],
    "view"
  >;

  getVaultTokenInfo: TypedContractMethod<
    [
      _dataBase: AddressLike,
      _poolToken: AddressLike,
      _usdgAmount: BigNumberish,
      _tokens: AddressLike[]
    ],
    [bigint[]],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "cumulativeFundingRates"
  ): TypedContractMethod<
    [_dataBase: AddressLike, _poolToken: AddressLike, _tokens: AddressLike[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getIndexTokenAccountInfo"
  ): TypedContractMethod<
    [
      _dataBase: AddressLike,
      _poolToken: AddressLike,
      _account: AddressLike,
      _tokens: AddressLike[]
    ],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getIndexTokenInfo"
  ): TypedContractMethod<
    [_dataBase: AddressLike, _poolToken: AddressLike, _tokens: AddressLike[]],
    [bigint[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getVaultTokenInfo"
  ): TypedContractMethod<
    [
      _dataBase: AddressLike,
      _poolToken: AddressLike,
      _usdgAmount: BigNumberish,
      _tokens: AddressLike[]
    ],
    [bigint[]],
    "view"
  >;

  filters: {};
}
