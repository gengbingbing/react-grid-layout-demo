/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  LiquidityManager,
  LiquidityManagerInterface,
} from "../LiquidityManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleBase",
        name: "_roleBase",
        type: "address",
      },
      {
        internalType: "contract DataBase",
        name: "_dataBase",
        type: "address",
      },
      {
        internalType: "contract EventLogger",
        name: "_eventLogger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "AddressNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientLPOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientTokenOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientUSDGOut",
    type: "error",
  },
  {
    inputs: [],
    name: "IsCooldown",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroLpAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroTokenAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gov",
        type: "address",
      },
    ],
    name: "UpdateGov",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "handler",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "UpdateHandler",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minUsdg",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minLp",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fundingAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minUsdg",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minLp",
        type: "uint256",
      },
    ],
    name: "addLiquidityForAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataBase",
    outputs: [
      {
        internalType: "contract DataBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventLogger",
    outputs: [
      {
        internalType: "contract EventLogger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_maximize",
        type: "bool",
      },
    ],
    name: "getAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_maximize",
        type: "bool",
      },
    ],
    name: "getAumInUsdg",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdg",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isHandler",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastAddedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lpAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lpAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "removeLiquidityForAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleBase",
    outputs: [
      {
        internalType: "contract RoleBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultHandler",
        type: "address",
      },
    ],
    name: "setVaultHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdg",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultHandler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100e957601f6200236238819003918201601f19168301916001600160401b038311848410176100ee578084926060946040528339810103126100e95780516001600160a01b039182821682036100e95760208101519083821682036100e9576040015192831683036100e957600160005561025860055560805260a05260c0523360018060a01b0319600154161760015560405161225d9081620001058239608051818181610142015281816104af01528181610610015281816109e00152611a54015260a0518161046b015260c05181818161065b01528181610ccc0152611d320152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826307b1275d146107865750816312d43a511461075d5781632388dac1146106fe57816324d845331461068a5781632999118414610646578163343fc3a7146105f557816335269315146105d6578163392e53cd146105af57816346ea87af146105725781634ff35e14146104de5781635cb5e41d1461049a5781637f9498a81461045657816385127b3b1461040d57816391c98a2a146103be5781639cb7de4b14610334578163b79f12b21461030b578163c4d66de814610278578163cfad57a2146101e957508063e4cd77f61461012c5763f5b91b7b1461010157600080fd5b3461012857816003193601126101285760025490516001600160a01b039091168152602090f35b5080fd5b5034610128579061016661013f3661082c565b907f0000000000000000000000000000000000000000000000000000000000000000611863565b9091835193849381850191855280518092526060850191602080920190845b8181106101c957505050848203818601528080855193848152019401925b8281106101b257505050500390f35b8351855286955093810193928101926001016101a3565b82516001600160a01b031685528897509383019391830191600101610185565b91905034610274576020366003190112610274576102056107e5565b600154926001600160a01b039190828516330361025d5750166001600160a01b0319929092168217600155519081527fe24c39186e9137521953beaa8446e71f55b8f12296984f9d4273ceb1af728d9090602090a180f35b60249084519063472511eb60e11b82523390820152fd5b8280fd5b91905034610274576020366003190112610274576102946107e5565b6001546001600160a01b039391929190841633036102f5576003549160ff8360a01c166102e857505060ff60a01b1916600160a01b17600355600280546001600160a01b0319169290911691909117905580f35b516302ed543d60e51b8152fd5b602491519063472511eb60e11b82523390820152fd5b50503461012857816003193601126101285760035490516001600160a01b039091168152602090f35b838334610128576103443661082c565b6001549194916001600160a01b0390811633036103a8577fb0229aff02e2711a009feb0e68558dad9374ae5cb00b1c47314c5dfdd90d2dda949516918286526020528285209015159060ff1981541660ff831617905582519182526020820152a180f35b835163472511eb60e11b81523381850152602490fd5b5050346101285760a0366003190112610128579060209160016104056103e26107e5565b6103ea610800565b6103f261085b565b60843591606435916044359133336109cb565b925551908152f35b5050346101285780600319360112610128578060209261042b6107e5565b610433610800565b6001600160a01b0391821683526006865283832091168252845220549051908152f35b505034610128578160031936011261012857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610128578160031936011261012857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8383346101285760e0366003190112610128576104f96107e5565b610501610800565b9061050a610816565b94606435906001600160a01b038216820361056e5761052761085b565b3386528060205260ff8587205416156105575750946001926104059260209760c4359360a43593608435936109cb565b60249085519063472511eb60e11b82523390820152fd5b8580fd5b9050346102745760203660031901126102745760209260ff918391906001600160a01b0361059e6107e5565b168252855220541690519015158152f35b50503461012857816003193601126101285760209060ff60035460a01c1690519015158152f35b5050346101285781600319360112610128576020906005549051908152f35b5050346101285760209061063f61060b3661082c565b6106377f0000000000000000000000000000000000000000000000000000000000000000918383611863565b929091610e83565b9051908152f35b505034610128578160031936011261012857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8383346101285760c0366003190112610128576106a56107e5565b6106ad610800565b906106b6610816565b60a435956001600160a01b038716870361056e576106d261085b565b3386528060205260ff858720541615610557575094600192610405926020976084359260643592611a0e565b82843461075a5760a036600319011261075a576107196107e5565b91610722610800565b608435936001600160a01b0385168503610756576020946001926104059261074861085b565b606435916044359133611a0e565b8380fd5b80fd5b50503461012857816003193601126101285760015490516001600160a01b039091168152602090f35b84925034610274576020366003190112610274576107a26107e5565b6001546001600160a01b039391929190841633036107d05750501660018060a01b0319600354161760035580f35b63472511eb60e11b8252339082015260249150fd5b600435906001600160a01b03821682036107fb57565b600080fd5b602435906001600160a01b03821682036107fb57565b604435906001600160a01b03821682036107fb57565b60409060031901126107fb576004356001600160a01b03811681036107fb579060243580151581036107fb5790565b60026000541461086c576002600055565b604051633ee5aeb560e01b8152600490fd5b6001600160401b03811161089157604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761089157604052565b606081019081106001600160401b0382111761089157604052565b601f909101601f19168101906001600160401b0382119082101761089157604052565b6001600160a01b0391821681529181166020830152909116604082015260600190565b8181029291811591840414171561093657565b634e487b7160e01b600052601160045260246000fd5b8115610956570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b039091168152602081019190915260400190565b949160e0969399989794919961010087019a60018060a01b03928380921689521660208801521660408601526060850152608084015260a083015260c08201520152565b9495969091966000938515610e6357610a24987f000000000000000000000000000000000000000000000000000000000000000096610a0a8289611f6d565b95865199610a178b611f56565b9a60409d8e519c8d6108dd565b808c52610a33601f1991611f56565b013660208d0137885b8851811015610b49578a60208f60246001600160a01b03610a5d868f61181f565b5116610aa6610ab4845186810190878252600a878201526060690a0a492868aa6be9a82b60b31b818301528152610a93816108a7565b519020928551928391888301958661212b565b03601f1981018352826108dd565b51902091518094819363bd02d0f560e01b8352600483015260018060a01b03165afa908115610b3e57908d92918c91610b01575b50610af682610afc9461181f565b52611810565b610a3c565b919250506020813d602011610b36575b81610b1e602093836108dd565b81010312610b3257518c9190610af6610ae8565b8a80fd5b3d9150610b11565b508e513d8c823e3d90fd5b5093989683610b6093979d999b92969c9498610e83565b86516318160ddd60e01b815260049390926001600160a01b038816916020858781865afa948515610d60578c95610e2f575b506003548a516323b872dd60e01b602082019081526001600160a01b03938416602483015292909116604482015260648082018a9052815260a081018181106001600160401b03821117610e1c578b52516001600160a01b038c16916020918e9182855af115610e12578b513d610e095750803b155b610df3575090610c429392916020868b8d8f8d60018060a01b036003541693519a8b95869485936396bf85df60e01b855230928501610900565b03925af1948515610d60578c95610dbb575b50808510610d9f575081610d8657839b5b808d10610d6a5750803b15610b3257610c928b8d8b51809381926340c10f1960e01b83528b8b840161096c565b038183865af18015610d6057610d4d575b508a5260066020908152888b206001600160a01b038781166000908152919092528990204290557f00000000000000000000000000000000000000000000000000000000000000001695863b15610b32578a9796959492938894610d1d938e938c519d8e9b8c9a8b9963c4d0222560e01b8b528a01610987565b03925af1908115610d445750610d3257505090565b610d3c829161087e565b61075a575090565b513d84823e3d90fd5b610d59909b919b61087e565b9938610ca3565b8a513d8e823e3d90fd5b856044918e8c519263b831882760e01b84528301526024820152fd5b610d9982610d948587610923565b61094c565b9b610c65565b85604491868c5192630df53a7960e41b84528301526024820152fd5b9094506020813d602011610deb575b81610dd7602093836108dd565b81010312610de757519338610c54565b8b80fd5b3d9150610dca565b856024918b5191635274afe760e01b8352820152fd5b60011415610c08565b89513d8d823e3d90fd5b634e487b7160e01b8e526041885260248efd5b9094506020813d602011610e5b575b81610e4b602093836108dd565b81010312610de757519338610b92565b3d9150610e3e565b6040516382c4a8c960e01b8152600490fd5b604d811161093657600a0a90565b9190939293604051602081019060208252600c60408201526b20aaa6afa0a22224aa24a7a760a11b606082015260608152610ebd816108a7565b519020604051610ed681610aa68560208301958661212b565b51902060405163bd02d0f560e01b815260048101919091526020816024816001600160a01b0388165afa908115611430576000916117de575b5092600092610f6e604051610f23816108c2565b603381527f0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d67657441756d2d6020820152722d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d60681b60408201526121e6565b610f788383611f6d565b84955b8151871015611658576001600160a01b03610f96888461181f565b511690610fa4828b866120c1565b604051602081019060208252600b60408201526a1413d3d317d05353d5539560aa1b606082015260608152610fd8816108a7565b519020604051610ff281610aa6878c602084019687612186565b51902060405163bd02d0f560e01b81526004810191909152906020826024816001600160a01b038b165afa91821561143057600092611624575b50604051602081019060208252600e60408201526d544f4b454e5f444543494d414c5360901b606082015260608152611064816108a7565b51902060405161107d81610aa68860208301958661212b565b51902060405163bd02d0f560e01b81526004810191909152916020836024816001600160a01b038c165afa928315611430576000936115f0575b50604051602081019060208252600c60408201526b29aa20a12622afaa27a5a2a760a11b6060820152606081526110ed816108a7565b51902060405161110681610aa68960208301958661212b565b519020604051633d70e7e560e11b815260048101919091526020816024816001600160a01b038d165afa908115611430576000916115c1575b5015611218579161116061115a6111669361116c9695610923565b91610e75565b9061094c565b90611849565b965b604080519081018082116001600160401b0390911117610891576000818a6111fc611212966040859601604052601284527161756d3a2025732020746f6b656e3a20257360701b60208501526040519283916111e3602084019663038fd88960e31b88526060602486015260848501906121a6565b916044840152606483015203601f1981018352826108dd565b51906a636f6e736f6c652e6c6f675afa50611810565b95610f7b565b926040516020810190602082526011604082015270474c4f42414c5f53484f52545f53495a4560781b606082015260608152611253816108a7565b5190208561126f8b610aa6604051938492602084019687612186565b51902060405163bd02d0f560e01b815260048101919091526020816024816001600160a01b038d165afa9081156114305760009161158f575b5080611470575b50604051602081019060208252600e60408201526d11d5505490539511515117d554d160921b6060820152606081526112e7816108a7565b519020856113038b610aa6604051938492602084019687612186565b51902060405163bd02d0f560e01b815260048101919091526020816024816001600160a01b038d165afa9081156114305760009161143c575b5061134691611849565b92604051602081019060208252600f60408201526e149154d15495915117d05353d55395608a1b60608201526060815261137f816108a7565b5190208561139b8b610aa6604051938492602084019687612186565b51902060405163bd02d0f560e01b81526004810191909152906020826024816001600160a01b038d165afa918215611430576000926113fa575b5061115a611166936113ef6113f497969461116094611856565b610923565b9661116e565b90916020823d602011611428575b81611415602093836108dd565b8101031261075a5750519061115a6113d5565b3d9150611408565b6040513d6000823e3d90fd5b906020823d602011611468575b81611456602093836108dd565b8101031261075a57505161134661133c565b3d9150611449565b906040516020810190602082526019604082015278474c4f42414c5f53484f52545f41564552414745505249434560381b6060820152606081526114b3816108a7565b519020866114cf8c610aa6604051938492602084019687612186565b51902060405163bd02d0f560e01b815260048101919091526020816024816001600160a01b038e165afa80156114305760009061155b575b61152b9150610d948582119485600014611551576115258784611856565b90610923565b91611540579061153a91611849565b386112af565b999061154b91611849565b9861153a565b6115258388611856565b6020823d602011611587575b81611574602093836108dd565b8101031261075a575061152b9051611507565b3d9150611567565b906020823d6020116115b9575b816115a9602093836108dd565b8101031261075a575051386112a8565b3d915061159c565b6115e3915060203d6020116115e9575b6115db81836108dd565b8101906119f6565b3861113f565b503d6115d1565b90926020823d60201161161c575b8161160b602093836108dd565b8101031261075a57505191386110b7565b3d91506115fe565b90916020823d602011611650575b8161163f602093836108dd565b8101031261075a575051903861102c565b3d9150611632565b93969750505092506116ba60405161166f816108c2565b603381527f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d67657441756d2d2d6020820152721696969696969696969696969696969696968560691b60408201526121e6565b808211156117cc57505060206000925b610aa661171860405184810190858252600d60408201526c20aaa6afa222a22aa1aa24a7a760991b606082015260608152611704816108a7565b51902092604051928391868301958661212b565b51902060405163bd02d0f560e01b8152600481019190915291829060249082906001600160a01b03165afa9081156114305760009161179a575b508181111561178c57505060005b670de0b6b3a7640000908181029181830414901517156109365768327cb2734119d3b7a9601e1b900490565b61179591611856565b611760565b906020823d6020116117c4575b816117b4602093836108dd565b8101031261075a57505138611752565b3d91506117a7565b6020916117d891611856565b926116ca565b906020823d602011611808575b816117f8602093836108dd565b8101031261075a57505138610f0f565b3d91506117eb565b60001981146109365760010190565b80518210156118335760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190820180921161093657565b9190820391821161093657565b9291906118709084611f6d565b9081519361189e61188086611f56565b93604096611890885196876108dd565b808652601f19928391611f56565b0193602094368688013760005b82518110156119ea57811561199f576001600160a01b03868a611917611923846118d5878a61181f565b5116835185810190868252600a868201526060690a0a492868aa6be9a82b60b31b818301528152611905816108a7565b5190209351928391868301958661212b565b038981018352826108dd565b51902060248c518094819363bd02d0f560e01b835260048301528a165afa90811561199457600091611965575b509061196091610af6828a61181f565b6118ab565b908782813d831161198d575b61197b81836108dd565b8101031261075a575051611960611950565b503d611971565b8a513d6000823e3d90fd5b6001600160a01b03868a611917611923846119ba878a61181f565b5116835185810190868252600a86820152606069282924a1a2a9afa6a4a760b11b818301528152611905816108a7565b50509395505050509190565b908160209103126107fb575180151581036107fb5790565b94909391956000968415611f44576001600160a01b038681168952600660209081526040808b20928a168b52919052882054600554611a4c91611849565b4210611f32577f000000000000000000000000000000000000000000000000000000000000000094611a7e8787611f6d565b94855197611a8b89611f56565b98611a996040519a8b6108dd565b808a52611aa8601f1991611f56565b013660208b01378a5b8751811015611baa576001600160a01b03611acc828a61181f565b5116610aa6611b1b604051602081019060208252600a6040820152606069282924a1a2a9afa6a4a760b11b818301528152611b06816108a7565b5190209260405192839160208301958661212b565b51902060405163bd02d0f560e01b81526004810191909152906020826024816001600160a01b038e165afa8015611b9f578d90611b67575b611b629250610af6828d61181f565b611ab1565b506020823d602011611b97575b81611b81602093836108dd565b81010312611b9357611b629151611b53565b8c80fd5b3d9150611b74565b6040513d8f823e3d90fd5b5093989297909499969584611bbf9397610e83565b6040516318160ddd60e01b81529093906020816004816001600160a01b0388165afa908115611f27578791611ef1575b50611bfe81610d948789610923565b9160018060a01b03600254166040516370a0823160e01b8152306004820152602081602481855afa908115611ee6578a91611eb4575b50808511611e53575b50506001600160a01b0385163b15611e4f57604051632770a7eb60e21b8152888180611c6d8b896004840161096c565b0381836001600160a01b038b165af18015611e1357908991611e3b575b505060025460035460405163a9059cbb60e01b81529160209183916001600160a01b039081169183918e918391611cc7918c91166004840161096c565b03925af18015611e13578a9b9c602092611d15929c9a9b9c611e1e575b5060035460405163b2ddf99b60e01b81529d8e936001600160a01b039092169284928f928492908d60048501610900565b03925af1998a15611e1357899a611ddf575b50808a10611daf57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031694853b15611dab5789899796959492938894611d8d936040519b8c9a8b998a9863b1d895ff60e01b8a5260048a01610987565b03925af18015611da057610d3257505090565b6040513d84823e3d90fd5b8880fd5b6040516319aae4c960e11b81526001600160a01b0388166004820152602481018b90526044810191909152606490fd5b9099506020813d602011611e0b575b81611dfb602093836108dd565b810103126107fb57519838611d27565b3d9150611dee565b6040513d8b823e3d90fd5b611e3490843d86116115e9576115db81836108dd565b5038611ce4565b611e449061087e565b611e4f578738611c8a565b8780fd5b611e5d9085611856565b813b15611eb057611e888a9283926040519485809481936340c10f1960e01b8352306004840161096c565b03925af18015611e1357611e9d575b80611c3d565b611ea99098919861087e565b9638611e97565b8980fd5b90506020813d602011611ede575b81611ecf602093836108dd565b81010312611eb0575138611c34565b3d9150611ec2565b6040513d8c823e3d90fd5b90506020813d602011611f1f575b81611f0c602093836108dd565b81010312611f1b575138611bef565b8680fd5b3d9150611eff565b6040513d89823e3d90fd5b604051631dd0e3f760e31b8152600490fd5b60405163e1ec9f5560e01b8152600490fd5b6001600160401b0381116108915760051b60200190565b6001600160a01b0390811691611f8281612144565b90604051916335ea805960e01b835260048301526020918281602481885afa90811561143057600091612093575b506064611fbe600093612144565b60405196879384926373f20a4760e11b8452600484015285602484015260448301525afa92831561143057600093611ff7575b50505090565b9091923d8082843e61200981846108dd565b8201918381840312610128578051906001600160401b03821161027457019382601f860112156101285784519161203f83611f56565b9561204d60405197886108dd565b838752858088019460051b820101948511610128578501925b84841061207b57505050505050388080611ff1565b83518381168103610274578152928501928501612066565b908382813d83116120ba575b6120a981836108dd565b8101031261075a5750516064611fb0565b503d61209f565b9160005b835181101561210a576001600160a01b03806120e1838761181f565b5116908316146120f9576120f490611810565b6120c5565b919050612106925061181f565b5190565b6040516370de323160e01b81526001600160a01b0383166004820152602490fd5b9081526001600160a01b03909116602082015260400190565b610aa6612180604051602081019060208252600d60408201526c4153534554535f544f4b454e5360981b606082015260608152611b06816108a7565b51902090565b9081526001600160a01b0391821660208201529116604082015260600190565b919082519283825260005b8481106121d2575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016121b1565b6000809160405161221481610aa6602082019463104c13eb60e21b86526020602484015260448301906121a6565b51906a636f6e736f6c652e6c6f675afa5056fea2646970667358221220beaf920efc2211cc78113c8834004c39adc2563190a512a35feb20cb0a5f3f7e64736f6c63430008140033";

type LiquidityManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityManager__factory extends ContractFactory {
  constructor(...args: LiquidityManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roleBase: AddressLike,
    _dataBase: AddressLike,
    _eventLogger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _roleBase,
      _dataBase,
      _eventLogger,
      overrides || {}
    );
  }
  override deploy(
    _roleBase: AddressLike,
    _dataBase: AddressLike,
    _eventLogger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _roleBase,
      _dataBase,
      _eventLogger,
      overrides || {}
    ) as Promise<
      LiquidityManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LiquidityManager__factory {
    return super.connect(runner) as LiquidityManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityManagerInterface {
    return new Interface(_abi) as LiquidityManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LiquidityManager {
    return new Contract(address, _abi, runner) as unknown as LiquidityManager;
  }
}
