/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  StableCoinVaultReader,
  StableCoinVaultReaderInterface,
} from "../StableCoinVaultReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataBase",
        name: "_dataBase",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "cumulativeFundingRates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataBase",
        name: "_dataBase",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getIndexTokenInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataBase",
        name: "_dataBase",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_usdgAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getVaultTokenInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610e98908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80632054256814610321578063c2a7855e146102bb5763fbcabfe41461003d57600080fd5b3461027b5761004b36610b9a565b9190825191600792838102908082048514901517156102a55761006d90610bea565b9060005b8551811015610293576001600160a01b038061008d8389610c2b565b51166040519060209182810190838252600c604082015260606b4d41585f4c4556455241474560a01b8183015281526100c581610a86565b5190206040516100ec816100de858c8884019687610e29565b03601f198101835282610ab7565b519020826040518095819363bd02d0f560e01b8352600483015260249687918a165afa92831561028757600093610252575b50508784029184830489148515171561023d5761013b8388610c2b565b52610147818887610c55565b600183018084116102285761015c9088610c2b565b52610168818887610d1b565b600283018084116102285761017d9088610c2b565b52610189818887610d5e565b600383018084116102285761019e9088610c2b565b526101aa818887610d5e565b60048301808411610228576101bf9088610c2b565b526101cb818887610d9c565b6005830180841161022857906101e56101ed939289610c2b565b528786610de2565b916006820180921161021457509061020961020f939286610c2b565b52610c1c565b610071565b634e487b7160e01b60009081526011600452fd5b84634e487b7160e01b60005260116004526000fd5b83634e487b7160e01b60005260116004526000fd5b9080929350813d8311610280575b61026a8183610ab7565b8101031261027b575190388061011e565b600080fd5b503d610260565b6040513d6000823e3d90fd5b604051806102a18582610b5f565b0390f35b634e487b7160e01b600052601160045260246000fd5b3461027b576102c936610b9a565b90916102d58251610bea565b9260005b83518110156103135761030e906103046001600160a01b036102fb8388610c2b565b51168486610d5e565b6102098288610c2b565b6102d9565b604051806102a18782610b5f565b3461027b57608036600319011261027b576001600160a01b03600435808216900361027b5780602435166024350361027b576044356064356001600160401b03811161027b57610375903690600401610af1565b908151600a810290808204600a14901517156102a55761039490610bea565b9268327cb2734119d3b7a9601e1b60005b8451811015610a7857826103b98287610c2b565b5116604051602081019060208252600b60408201526a1413d3d317d05353d5539560aa1b6060820152606081526103ef81610a86565b51902060405161040c816100de8560208301956024359087610e29565b5190206040519063bd02d0f560e01b8252600482015260208160248188600435165afa90811561028757600091610a46575b5082600a810204600a14831517156102a55761045d600a840289610c2b565b52604051602081019060208252600f60408201526e149154d15495915117d05353d55395608a1b60608201526060815261049681610a86565b5190206040516104b3816100de8560208301956024359087610e29565b5190206040519063bd02d0f560e01b8252600482015260208160248188600435165afa90811561028757600091610a14575b50600a830260018101106102a5576105036001600a85020189610c2b565b52604051602081019060208252600b60408201526a1554d111d7d05353d5539560aa1b60608201526060815261053881610a86565b519020604051610555816100de8560208301956024359087610e29565b5190206040519063bd02d0f560e01b8252600482015260208160248188600435165afa908115610287576000916109e2575b50600a830260028101106102a5576105a56002600a85020189610c2b565b52604051602081019060208252600e60408201526d544f4b454e5f444543494d414c5360901b6060820152606081526105dd81610a86565b5190206040516105f6816100de85602083019586610e49565b5190206040519063bd02d0f560e01b8252600482015260208160248188600435165afa908115610287576000916109b0575b50604051602081019060208252600a6040820152690a0a492868aa6be9a82b60b31b60608201526060815261065c81610a86565b519020604051610675816100de86602083019586610e49565b5190206040519063bd02d0f560e01b8252600482015260208160248189600435165afa9081156102875760009161097e575b5086858102048514871517156102a5578015610968578487020490604d81116102a557600a0a81818102048114821517156102a557600a840260038101106102a557670de0b6b3a76400009102046107056003600a85020189610c2b565b52604051602081019060208252600d60408201526c10955191915497d05353d55395609a1b60608201526060815261073c81610a86565b519020604051610759816100de8560208301956024359087610e29565b5190206040519063bd02d0f560e01b8252600482015260208160248188600435165afa90811561028757600091610936575b50600a830260048101106102a5576107a96004600a85020189610c2b565b52604051602081019060208252600f60408201526e13505617d554d111d7d05353d55395608a1b6060820152606081526107e281610a86565b5190206040516107ff816100de8560208301956024359087610e29565b5190206040519063bd02d0f560e01b8252600482015260208160248188600435165afa90811561028757600091610904575b506005600a84020180600a8502116102a55761084d9089610c2b565b5261085d81602435600435610d1b565b6006600a84020180600a8502116102a5576108789089610c2b565b5261088881602435600435610de2565b6007600a84020180600a8502116102a5576108a39089610c2b565b526108b381602435600435610d9c565b906008600a8402019182600a8502116102a5576108d36108df938a610c2b565b52602435600435610c55565b906009600a8202019182600a8302116102a5576102096108ff9389610c2b565b6103a5565b90506020813d60201161092e575b8161091f60209383610ab7565b8101031261027b575188610831565b3d9150610912565b90506020813d602011610960575b8161095160209383610ab7565b8101031261027b57518861078b565b3d9150610944565b634e487b7160e01b600052601260045260246000fd5b90506020813d6020116109a8575b8161099960209383610ab7565b8101031261027b5751896106a7565b3d915061098c565b90506020813d6020116109da575b816109cb60209383610ab7565b8101031261027b575188610628565b3d91506109be565b90506020813d602011610a0c575b816109fd60209383610ab7565b8101031261027b575188610587565b3d91506109f0565b90506020813d602011610a3e575b81610a2f60209383610ab7565b8101031261027b5751886104e5565b3d9150610a22565b90506020813d602011610a70575b81610a6160209383610ab7565b8101031261027b57518861043e565b3d9150610a54565b604051806102a18882610b5f565b608081019081106001600160401b03821117610aa157604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610aa157604052565b6001600160401b038111610aa15760051b60200190565b81601f8201121561027b57803591610b0883610ada565b92610b166040519485610ab7565b808452602092838086019260051b82010192831161027b578301905b828210610b40575050505090565b81356001600160a01b038116810361027b578152908301908301610b32565b6020908160408183019282815285518094520193019160005b828110610b86575050505090565b835185529381019392810192600101610b78565b606060031982011261027b576001600160a01b0391600435838116810361027b5792602435908116810361027b5791604435906001600160401b03821161027b57610be791600401610af1565b90565b90610bf482610ada565b610c016040519182610ab7565b8281528092610c12601f1991610ada565b0190602036910137565b60001981146102a55760010190565b8051821015610c3f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91610cac9160405191602093838580950190858252600e60408201526d11d5505490539511515117d554d160921b606082015260608152610c9581610a86565b519020926100de6040519384928784019687610e29565b51902060405163bd02d0f560e01b8152600481019190915292839060249082906001600160a01b03165afa90811561028757600091610cec575b50905090565b82813d8311610d14575b610d008183610ab7565b81010312610d115750518038610ce6565b80fd5b503d610cf6565b91610cac91604051916020938385809501908582526011604082015270474c4f42414c5f53484f52545f53495a4560781b606082015260608152610c9581610a86565b91610cac9160405191602093838580950190858252600c60408201526b46554e44494e475f5241544560a01b606082015260608152610c9581610a86565b91610cac916040519160209383858095019085825260146040820152734d41585f474c4f42414c5f4c4f4e475f53495a4560601b606082015260608152610c9581610a86565b91610cac916040519160209383858095019085825260156040820152744d41585f474c4f42414c5f53484f52545f53495a4560581b606082015260608152610c9581610a86565b9081526001600160a01b0391821660208201529116604082015260600190565b9081526001600160a01b0390911660208201526040019056fea26469706673582212204e1d6ffe3eb57d27f8b24eccd854d18591d37860dac4954f8268d40c4ed4df0864736f6c63430008140033";

type StableCoinVaultReaderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StableCoinVaultReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StableCoinVaultReader__factory extends ContractFactory {
  constructor(...args: StableCoinVaultReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StableCoinVaultReader & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StableCoinVaultReader__factory {
    return super.connect(runner) as StableCoinVaultReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StableCoinVaultReaderInterface {
    return new Interface(_abi) as StableCoinVaultReaderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StableCoinVaultReader {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StableCoinVaultReader;
  }
}
